#crud operation with java taking inputs from user

package crud_operation;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.Scanner;

public class CRUD_Operation {

	public static void main(String[] args) {
		CRUD_Operation objTest = new CRUD_Operation();

		Scanner scan = new Scanner(System.in);
		int data_id = scan.nextInt();
		scan.nextLine();
		String data_name = scan.nextLine();
		int data_mark = scan.nextInt();
		scan.nextLine();

		objTest.create_data(data_id, data_name, data_mark);
		scan.close();

	}

	public void create_data(int sl_no, String name, int mark) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {
			String query = "insert into student values (?,?,?)";
			ps = connection.prepareStatement(query);

			ps.setInt(1, sl_no);
			ps.setString(2, name);
			ps.setInt(3, mark);

			System.out.println(ps);
			ps.executeUpdate();

		} catch (Exception e) {
			System.out.println(e);
		}
	}

}

#Read operation

package crud_operation;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;

public class CRUD_Operation {

	public static void main(String[] args) {
		CRUD_Operation objTest = new CRUD_Operation();

		objTest.read_data();

	}

	public void create_data(int sl_no, String name, int mark) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {
			String query = "insert into student values (?,?,?)";
			ps = connection.prepareStatement(query);

			ps.setInt(1, sl_no);
			ps.setString(2, name);
			ps.setInt(3, mark);

			System.out.println(ps);
			ps.executeUpdate();

		} catch (Exception e) {
			System.out.println(e);
		}
	}
	
	public void read_data() {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		ResultSet rs= null;
		try {
			String query = "select * from student";
			ps = connection.prepareStatement(query);
			rs = ps.executeQuery();
			while(rs.next()) {
				System.out.println("Id: "+rs.getString("id"));
				System.out.println("name: "+rs.getString("name"));
				System.out.println("marks: "+rs.getInt("marks"));
				System.out.println("--------------------------------");
			}
		}catch(Exception e) {
			System.out.println(e);
		}
	}

}

#Custom read function


	public void read_data_custom(int id) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		ResultSet rs= null;
		try {
			String query = "select * from student where id=(?)";
			ps = connection.prepareStatement(query);
			ps.setInt(1, id);
			rs = ps.executeQuery();
			while(rs.next()) {
				System.out.println("Id: "+rs.getString("id"));
				System.out.println("name: "+rs.getString("name"));
				System.out.println("marks: "+rs.getInt("marks"));
				System.out.println("--------------------------------");
			}
		}catch(Exception e) {
			System.out.println(e);
		}
	}

#updating the table values

	public void update_data(int newid, int id, String name, int marks) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {
			String query = "update student set id=?, name=?, marks=? where id=?";
			ps = connection.prepareStatement(query);
			ps.setInt(1, newid);
			ps.setString(2, name);
			ps.setInt(3, marks);
			ps.setInt(4, id);
			System.out.println(ps);
			ps.executeUpdate();					
		}catch(Exception e) {
			System.out.println(e);
		}
	}

#alter table
	public void alter_table(String type, String column_name) {
	    DB_Connection obj_DB_Connection = new DB_Connection();
	    Connection connection = obj_DB_Connection.get_connection();
	    PreparedStatement ps = null;
	    try {

	        String query;
	        if ("add".equalsIgnoreCase(type)) {

	            query = "ALTER TABLE student ADD " + column_name + " VARCHAR(30)";
	        } else if ("drop".equalsIgnoreCase(type)) {

	            query = "ALTER TABLE student DROP COLUMN " + column_name;
	        } else {

	            System.out.println("Unsupported ALTER TABLE operation type: " + type);
	            return; 
	        }

	        ps = connection.prepareStatement(query);
	        System.out.println(ps);
	        ps.executeUpdate();
	    } catch (Exception e) {
	        System.out.println(e);
	    }
	}

#delete operation

public void delete_data(int id) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {
			String query = "delete from student where id=?";
			ps = connection.prepareStatement(query);
			ps.setInt(1, id);
			System.out.println(ps);
			ps.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		}

	}


#whole code
package crud_operation;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;

public class CRUD_Operation {

	public static void main(String[] args) {
		CRUD_Operation objTest = new CRUD_Operation();

		objTest.delete_data(111);

	}

	public void create_data(int sl_no, String name, int mark) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {
			String query = "insert into student values (?,?,?)";
			ps = connection.prepareStatement(query);

			ps.setInt(1, sl_no);
			ps.setString(2, name);
			ps.setInt(3, mark);

			System.out.println(ps);
			ps.executeUpdate();

		} catch (Exception e) {
			System.out.println(e);
		}
	}

	public void read_data() {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			String query = "select * from student";
			ps = connection.prepareStatement(query);
			rs = ps.executeQuery();
			while (rs.next()) {
				System.out.println("Id: " + rs.getString("id"));
				System.out.println("name: " + rs.getString("name"));
				System.out.println("marks: " + rs.getInt("marks"));
				System.out.println("--------------------------------");
			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}

	public void read_data_custom(int id) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			String query = "select * from student where id=(?)";
			ps = connection.prepareStatement(query);
			ps.setInt(1, id);
			rs = ps.executeQuery();
			while (rs.next()) {
				System.out.println("Id: " + rs.getString("id"));
				System.out.println("name: " + rs.getString("name"));
				System.out.println("marks: " + rs.getInt("marks"));
				System.out.println("--------------------------------");
			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}

	public void update_data(int newid, int id, String name, int marks) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {
			String query = "update student set id=?, name=?, marks=? where id=?";
			ps = connection.prepareStatement(query);
			ps.setInt(1, newid);
			ps.setString(2, name);
			ps.setInt(3, marks);
			ps.setInt(4, id);
			System.out.println(ps);
			ps.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		}
	}

	public void alter_table(String type, String column_name) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {

			String query;
			if ("add".equalsIgnoreCase(type)) {

				query = "ALTER TABLE student ADD " + column_name + " VARCHAR(30)";
			} else if ("drop".equalsIgnoreCase(type)) {

				query = "ALTER TABLE student DROP COLUMN " + column_name;
			} else {

				System.out.println("Unsupported ALTER TABLE operation type: " + type);
				return;
			}

			ps = connection.prepareStatement(query);
			System.out.println(ps);
			ps.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		}
	}

	public void delete_data(int id) {
		DB_Connection obj_DB_Connection = new DB_Connection();
		Connection connection = obj_DB_Connection.get_connection();
		PreparedStatement ps = null;
		try {
			String query = "delete from student where id=?";
			ps = connection.prepareStatement(query);
			ps.setInt(1, id);
			System.out.println(ps);
			ps.executeUpdate();
		} catch (Exception e) {
			System.out.println(e);
		}

	}

}

